@import "tailwindcss";

@font-face {
  font-family: 'THICCCBOI-Regular';
  src: url('fonts/THICCCBOI-Regular.woff2') format('woff2'),
      url('fonts/THICCCBOI-Regular.woff') format('woff');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'THICCCBOI-Medium';
  src: url('fonts/THICCCBOI-Medium.woff2') format('woff2'),
      url('fonts/THICCCBOI-Medium.woff') format('woff');
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'THICCCBOI-SemiBold';
  src: url('fonts/THICCCBOI-SemiBold.woff2') format('woff2'),
      url('fonts/THICCCBOI-SemiBold.woff') format('woff');
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'THICCCBOI-Bold';
  src: url('fonts/THICCCBOI-Bold.woff2') format('woff2'),
      url('fonts/THICCCBOI-Bold.woff') format('woff');
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}



@theme {
  /* Added breakpoints with min width in px: */
  /* 480px */
  --breakpoint-xs: 30rem;


  /* Default breakpoints in use with min width in px: */
  /* 640px */
  --breakpoint-sm: 40rem;

  /* 768px */
  --breakpoint-md: 48rem;

  /* 1024px */
  --breakpoint-lg: 64rem;

  /* 1280px */
  --breakpoint-xl: 80rem;

  /* 1536px */
  --breakpoint-2xl: 96rem;


  /* Added breakpoints with min width in px: */
  /* 1920px */
  --breakpoint-3xl: 120rem;
}

:root {
  --THICCCBOI-Regular: 'THICCCBOI-Regular', sans-serif;
  --THICCCBOI-Medium: 'THICCCBOI-Medium', sans-serif;
  --THICCCBOI-SemiBold: 'THICCCBOI-SemiBold', sans-serif;
  --THICCCBOI-Bold: 'THICCCBOI-Bold', sans-serif;

  --neutral-100: hsl(0, 0%, 100%);
  --neutral-200: hsl(0, 0%, 98%);
  --neutral-300: hsl(0, 0%, 87%);
  --neutral-400: hsl(0, 0%, 80%);
  --neutral-500: hsl(0, 0%, 67%);
  --neutral-600: hsl(0, 0%, 41%);
  --neutral-700: hsl(0, 0%, 21%);
  --neutral-800: hsl(0, 0%, 5%);
}

* 
{
  box-sizing: border-box;
}

/* NOTE: any classes with 'Direct' only work if the element is hovered on. If a state change is needed to simulate a hover, use the 'Indirect' classes */
.lightenDirect
{
  opacity: 1;
  transition-property: opacity;
  transition-duration: 200ms;
  transition-timing-function: ease-in-out;
}

.lightenDirect:hover
{
  opacity: 0.6;
}

.moveFromOriginToTopRight, .moveFromTopRightToOrigin
{
  transition-property: transform;
  transition-duration: 300ms;
  transition-timing-function: ease-in-out;
}

.moveFromOriginToTopRight
{
  transform: translate(0px, 0px);
  transform: translate(15%, -15%);
}

.moveFromTopRightToOrigin
{
  transform: translate(15%, -15%);
  transform: translate(0px, 0px);
}

.grow, .shrink
{
  transition-property: transform;
  transition-duration: 300ms;
  transition-timing-function: ease-in-out;
}

.grow
{
  transform-origin: left;
  transform: scaleX(0);
  transform: scaleX(1);
}

.shrink
{
  transform-origin: left;
  transform: scaleX(1);
  transform: scaleX(0);
}

.addOpacityIndirect, .removeOpacityIndirect
{
  transition-property: opacity;
  transition-duration: 300ms;
  transition-timing-function: ease-in-out;
}

.addOpacityIndirect
{
  opacity: 0.6;
  opacity: 1;
}

.removeOpacityIndirect
{
  opacity: 1;
  opacity: 0.6;
}

.scaleDownIndirect, .scaleUpIndirect
{
  transition-property: transform;
  transition-duration: 150ms;
  transition-timing-function: ease-in-out;
}

.scaleDownIndirect
{
  transform: scale(1);
  transform: scale(0.98);
}

.scaleUpIndirect
{
  transform: scaleX(0.98);
  transform: scaleX(1);
}

.zoomInIndirect, .zoomOutIndirect
{
  transition-property: transform;
  transition-duration: 150ms;
  transition-timing-function: ease-in-out;
}

.zoomInIndirect
{
  transform: scale(1);
  transform: scale(1.09);
}

.zoomOutIndirect
{
  transform: scaleX(1.09);
  transform: scaleX(1);
}

@media (prefers-reduced-motion) {
  .lightenDirect, .moveFromOriginToTopRight, .moveFromTopRightToOrigin, .grow, .shrink, .addOpacityIndirect, .removeOpacityIndirect, .scaleDownIndirect, .scaleUpIndirect, .zoomInIndirect, .zoomOutIndirect {
    transition: none;
  }
}

.textDivider
{
  margin: 0 10px;
  background-color: var(--neutral-500);
  width: 25px;
  height: 1px;
}

.divider
{
  background-color: var(--neutral-300);
  width: 100%;
  height: 1px;
}